!function(Q){var F={};function c(B){if(F[B])return F[B].exports;var U=F[B]={i:B,l:!1,exports:{}};return Q[B].call(U.exports,U,U.exports,c),U.l=!0,U.exports}c.m=Q,c.c=F,c.d=function(Q,F,B){c.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:B})},c.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},c.t=function(Q,F){if(1&F&&(Q=c(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(c.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var U in Q)c.d(B,U,function(F){return Q[F]}.bind(null,U));return B},c.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return c.d(F,"a",F),F},c.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},c.p="/dist",c(c.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/modules/clearForm.js\nvar clearForm = function clearForm(calcIsEmpty) {\n  var forms = document.querySelectorAll('form'),\n      calcResult = document.getElementById('calc-result'),\n      myonoffswitch = document.getElementById('myonoffswitch'),\n      myonoffswitchTwo = document.getElementById('myonoffswitch-two'),\n      calcSelescts = document.querySelectorAll('select'),\n      distance = document.getElementById('distance'),\n      selectBoxWrapper = document.querySelector('.select-box__wrapper'),\n      collapseOne = document.querySelector('div#collapseOne'),\n      panelCollapse = document.querySelectorAll('.panel-collapse');\n  forms.forEach(function (elem) {\n    var inputs = elem.querySelectorAll('input');\n    inputs.forEach(function (el) {\n      return el.value = '';\n    });\n  });\n\n  if (!calcIsEmpty) {\n    calcResult.value = '';\n    myonoffswitch.checked = true;\n    myonoffswitchTwo.checked = true;\n    calcSelescts.forEach(function (elem) {\n      return elem.selectedIndex = 0;\n    });\n    distance.value = '';\n    selectBoxWrapper.classList.remove('in');\n    collapseOne.classList.remove('in');\n    panelCollapse.forEach(function (elem) {\n      return elem.classList.remove('in');\n    });\n    calcIsEmpty = true;\n  }\n};\n\n/* harmony default export */ var modules_clearForm = (clearForm);\n// CONCATENATED MODULE: ./src/modules/onoffswitchCheckbox.js\n\n\nvar onoffswitchCheckbox = function onoffswitchCheckbox(targetPanelGroup) {\n  var onoffswitchCheckbox = document.querySelectorAll('.onoffswitch-checkbox'),\n      selectBoxWrapper = document.querySelector('.select-box__wrapper'),\n      myonoffSwitch = document.getElementById('myonoffswitch'),\n      myonoffSwitchSelesct = selectBoxWrapper.querySelectorAll('select'),\n      targetClosest = targetPanelGroup.closest('.onoffswitch-label');\n  onoffswitchCheckbox.forEach(function (elem) {\n    if (targetClosest && targetClosest.getAttribute('for') === elem.id) {\n      elem.checked = !elem.checked;\n\n      if (targetClosest.getAttribute('for') === myonoffSwitch.id && elem.checked) {\n        myonoffSwitchSelesct.forEach(function (el) {\n          return el.classList.remove('in');\n        });\n        selectBoxWrapper.classList.remove('in');\n      } else if (targetClosest.getAttribute('for') === myonoffSwitch.id && !elem.checked) {\n        myonoffSwitchSelesct.forEach(function (el) {\n          return el.classList.add('in');\n        });\n        selectBoxWrapper.classList.add('in');\n      }\n    }\n  });\n};\n\n/* harmony default export */ var modules_onoffswitchCheckbox = (onoffswitchCheckbox);\n// CONCATENATED MODULE: ./src/modules/accordion.js\n\n\nvar accordion = function accordion(targetPanelGroup) {\n  var panelGroup = document.querySelectorAll('.panel-group');\n  panelGroup.forEach(function (elem) {\n    var accordionItems = document.querySelectorAll(\"#\".concat(elem.id, \" .panel-default\"));\n    accordionItems.forEach(function (item, i) {\n      var collapseItems = document.querySelectorAll(\"#\".concat(elem.id, \" .panel-collapse\")),\n          collapseItem = item.querySelector('.panel-collapse');\n\n      if (targetPanelGroup.closest('.panel-default') === item && !targetPanelGroup.closest('#next-step')) {\n        //Для тестов калькулятора. В продакш поменять item.classList.add('in')); \t.add на .remove\n        collapseItems.forEach(function (item) {\n          return item.classList.remove('in');\n        });\n        collapseItem.classList.add('in');\n      } else if (targetPanelGroup.closest('.panel-default') === item && targetPanelGroup.closest('#next-step')) {\n        collapseItems.forEach(function (item) {\n          return item.classList.remove('in');\n        });\n        accordionItems[i + 1].querySelector('.panel-collapse').classList.add('in');\n      }\n    });\n  });\n};\n\n/* harmony default export */ var modules_accordion = (accordion);\n// CONCATENATED MODULE: ./src/modules/listener.js\n\n\n\n\n\nvar targetPanelGroup;\n\nvar listener_listener = function listener() {\n  var panelGroup = document.querySelectorAll('.panel-group'),\n      aCallBtn = document.querySelectorAll('a.call-btn'),\n      buttonCallBtn = document.querySelector('button.call-btn'),\n      popupCall = document.querySelector('.popup-call'),\n      popupDiscount = document.querySelector('.popup-discount'),\n      popupClose = document.querySelectorAll('.popup-close'),\n      addSentenceBtn = document.querySelector('.add-sentence-btn'),\n      discountBtns = document.querySelectorAll('.discount-btn'),\n      checkBtn = document.querySelector('.check-btn'),\n      popupCheck = document.querySelector('.popup-check'),\n      consultationBtn = document.querySelector('.consultation-btn'),\n      popupConsultation = document.querySelector('.popup-consultation'),\n      userQuest = document.querySelector('input[name=user_quest]'),\n      popup = document.querySelectorAll('.popup'),\n      forms = document.querySelectorAll('form');\n  forms.forEach(function (elem) {\n    elem.addEventListener('click', function (event) {\n      var isEmpty = function isEmpty(obj) {\n        for (var key in obj) {\n          return false;\n        }\n\n        return true;\n      };\n\n      var calcIsEmpty = isEmpty(totalObj);\n\n      if (!event.target.closest('.popup-discount') && !calcIsEmpty) {\n        for (var key in totalObj) {\n          delete totalObj[key];\n        }\n\n        modules_clearForm(calcIsEmpty);\n      }\n    });\n  });\n  panelGroup.forEach(function (elem) {\n    elem.addEventListener('click', function (event) {\n      event.preventDefault(); // event.stopPropagation()\n\n      var target = event.target;\n      targetPanelGroup = target; //accordion\n\n      modules_accordion(target); //onoffswitch-checkbox\n\n      modules_onoffswitchCheckbox(target); //onoffswitch-checkbox\n\n      modules_calculate(target);\n    });\n  });\n  aCallBtn.forEach(function (elem) {\n    elem.addEventListener('click', function (event) {\n      event.preventDefault();\n      popupCall.style.display = 'block';\n    });\n  });\n  popup.forEach(function (elem) {\n    elem.addEventListener('click', function (event) {\n      var target = event.target;\n\n      if (target.classList.contains('popup')) {\n        target.style.display = 'none';\n        modules_clearForm();\n      }\n    });\n  });\n  popupClose.forEach(function (element) {\n    element.addEventListener('click', function (event) {\n      var target = event.target;\n      event.preventDefault();\n\n      if (target.closest('.popup-call')) {\n        popupCall.style.display = 'none';\n      } else if (target.closest('.popup-discount')) {\n        popupDiscount.style.display = 'none';\n\n        for (var key in totalObj) {\n          delete totalObj[key];\n        }\n      } else if (target.closest('.popup-check')) {\n        popupCheck.style.display = 'none';\n      } else if (target.closest('.popup-consultation')) {\n        popupConsultation.style.display = 'none';\n\n        for (var _key in totalObj) {\n          delete totalObj[_key];\n        }\n\n        userQuest.value = '';\n      }\n\n      modules_clearForm();\n    });\n  });\n  buttonCallBtn.addEventListener('click', function (event) {\n    event.preventDefault();\n    popupDiscount.style.display = 'block';\n  });\n  addSentenceBtn.addEventListener('click', function () {\n    var hidden = document.querySelectorAll('.hidden'),\n        visibleSmBlock = document.querySelector('.visible-sm-block');\n    hidden.forEach(function (el) {\n      el.classList.remove('hidden');\n    });\n    visibleSmBlock.classList.remove('visible-sm-block');\n    addSentenceBtn.style.display = 'none';\n  });\n  discountBtns.forEach(function (elem) {\n    elem.addEventListener('click', function (event) {\n      event.preventDefault();\n      popupDiscount.style.display = 'block';\n    });\n  });\n  checkBtn.addEventListener('click', function (event) {\n    event.preventDefault();\n    popupCheck.style.display = 'block';\n  });\n  consultationBtn.addEventListener('click', function (event) {\n    event.preventDefault();\n\n    if (userQuest.value > 0) {\n      totalObj.userQuestion = userQuest.value;\n    }\n\n    popupConsultation.style.display = 'block';\n  });\n};\n\n/* harmony default export */ var modules_listener = (listener_listener);\n\n// CONCATENATED MODULE: ./src/modules/calculate.js\n\nvar totalObj = {};\n\nvar calculate = function calculate() {\n  var calcResult = document.getElementById('calc-result'),\n      myonoffswitch = document.getElementById('myonoffswitch'),\n      myonoffswitchTwo = document.getElementById('myonoffswitch-two'),\n      calcSelescts = document.querySelectorAll('select'),\n      distance = document.getElementById('distance');\n  var totalSum = 0;\n  myonoffswitch.checked ? totalObj.camersPrice1 = 10000 : (totalObj.camersPrice1 = 10000, totalObj.camersPrice2 = 5000);\n  calcSelescts.forEach(function (elem) {\n    if (elem.classList.contains('in')) {\n      if (elem.id === 'meters-first') {\n        +elem.value === 1.4 ? totalObj.metersFirst = 1 : totalObj.metersFirst = 1.2;\n      } else if (elem.id === 'quantity-first') {\n        +elem.value === 1 ? totalObj.quantityFirst = 1 : +elem.value === 2 ? totalObj.quantityFirst = 1.3 : totalObj.quantityFirst = 1.5;\n      } else if (elem.id === 'meters-two') {\n        +elem.value === 1.4 ? totalObj.metersTwo = 1 : totalObj.metersTwo = 1.2;\n      } else if (elem.id === 'quantity-two') {\n        +elem.value === 1 ? totalObj.quantityTwo = 1 : +elem.value === 2 ? totalObj.quantityTwo = 1.2 : totalObj.quantityTwo = 1.4;\n      }\n    }\n  });\n\n  if (myonoffswitchTwo.checked && !myonoffswitch.checked) {\n    totalObj.bottom1 = 1.1;\n    totalObj.bottom2 = 1.2;\n  } else if (myonoffswitchTwo.checked && myonoffswitch.checked) {\n    totalObj.bottom1 = 1.1;\n  } else if (!myonoffswitchTwo.checked) {\n    totalObj.bottom1 = 1;\n    totalObj.bottom2 = 1;\n  }\n\n  totalSum = totalObj.camersPrice1 * totalObj.metersFirst * totalObj.quantityFirst;\n\n  if (myonoffswitch.checked && totalObj.bottom1) {\n    totalSum *= totalObj.bottom1;\n  }\n\n  if (!myonoffswitch.checked) {\n    var totalSum2 = totalObj.camersPrice2 * totalObj.metersTwo * totalObj.quantityTwo;\n    totalSum += totalSum2;\n\n    if (totalObj.bottom2) {\n      totalSum *= totalObj.bottom2;\n    }\n  }\n\n  if (distance.value > 0) {\n    totalObj.distance = +distance.value;\n  }\n\n  totalSum = Math.floor(totalSum * 100) / 100;\n  totalObj.calcResult = totalSum;\n  calcResult.value = totalSum;\n};\n\n/* harmony default export */ var modules_calculate = (calculate);\n\n// CONCATENATED MODULE: ./src/modules/sendForm.js\n\n\n\nvar sendForm_sendForm = function sendForm() {\n  var errorMessage = 'Что-то пошло не так....',\n      loadMessage = 'Загрузка...',\n      successMessage = 'Отправлено!';\n  var forms = document.querySelectorAll('form'),\n      popupDiscount = document.querySelector('.popup-discount'),\n      popupDiscountInputs = popupDiscount.querySelectorAll('input');\n  var statusMassage = document.createElement('div');\n  statusMassage.style.csstext = 'font-size: 2rem; ';\n  statusMassage.classList.add('status-massage');\n  forms.forEach(function (elem) {\n    elem.addEventListener('submit', function (event) {\n      event.preventDefault();\n      var target = event.target,\n          form = target.closest('form');\n      var inputs = form.querySelectorAll('input');\n      form.appendChild(statusMassage);\n      statusMassage.textContent = '';\n      statusMassage.textContent = loadMessage;\n      var formData = new FormData(form);\n      var body = {};\n\n      for (var key in totalObj) {\n        body[key] = totalObj[key];\n      }\n\n      var isEmpty = function isEmpty(obj) {\n        for (var _key in obj) {\n          return false;\n        }\n\n        return true;\n      };\n\n      var calcIsEmpty = isEmpty(body);\n      formData.forEach(function (val, key) {\n        body[key] = val;\n      });\n      postData(body).then(function (response) {\n        if (response.status !== 200) {\n          throw new Error('status network not 200');\n        }\n\n        statusMassage.setAttribute(\"style\", \"height: auto;\");\n        statusMassage.textContent = successMessage;\n\n        if (!calcIsEmpty) {\n          modules_clearForm(calcIsEmpty);\n        }\n\n        for (var _key2 in totalObj) {\n          delete totalObj[_key2];\n        }\n\n        popupDiscountInputs.forEach(function (input) {\n          return input.disabled = 'true';\n        });\n\n        var popupDiscountStyle = function popupDiscountStyle() {\n          popupDiscount.style.display = 'none';\n          popupDiscountInputs.forEach(function (input) {\n            return input.disabled = false;\n          });\n          statusMassage.textContent = '';\n        };\n\n        setTimeout(popupDiscountStyle, 2000);\n      })[\"catch\"](function (error) {\n        statusMassage.setAttribute(\"style\", \"height: auto;\");\n        statusMassage.textContent = errorMessage;\n        console.error(error);\n      });\n      inputs.forEach(function (elem) {\n        elem.value = '';\n      });\n    });\n  }); // eslint-disable-next-line arrow-body-style\n\n  var postData = function postData(body) {\n    return fetch('./server.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n  };\n};\n\n/* harmony default export */ var modules_sendForm = (sendForm_sendForm);\n// CONCATENATED MODULE: ./src/modules/validateForm.js\nvar validateForm = function validateForm() {\n  var phoneUser = document.querySelectorAll('.phone-user'),\n      username = document.querySelectorAll('input[name=user_name]'),\n      distance = document.getElementById('distance'),\n      head = document.querySelector('head');\n  head.insertAdjacentHTML('beforeend', \"<style>\\n            input:focus:invalid {\\n                border: 3px solid red;\\n            }\\n            input:focus:valid {\\n                border: 3px solid green;\\n            }\\n            input{\\n                border: 3px solid black;\\n            }\\n            #input-validate {\\n                color:  red;\\n                font-size:  1rem;\\n\\t\\t\\t\\tmargin: 0;\\n\\t\\t\\t\\ttext-align: center \\n            }\\n         </style>\");\n  phoneUser.forEach(function (elem) {\n    elem.pattern = '\\\\+7\\\\s?[\\\\(]{0,1}[0-9]{3}[\\\\)]{0,1}\\\\s?\\\\d{3}[-]{0,1}\\\\d{2}[-]{0,1}\\\\d{2}';\n  });\n  username.forEach(function (elem) {\n    elem.pattern = '^[А-Яа-яЁё\\s]+$';\n  }); // distance.pattern = '([0-5]{0,1})([0-9]{0,1})([0-9]{0,1})';\n  //message for validate form NAME\n\n  username.forEach(function (element) {\n    var div = document.createElement('div'),\n        wrongText = 'Допустима ТОЛЬКО кириллица!';\n    div.id = 'input-validate';\n    element.insertAdjacentElement('beforebegin', div);\n    element.addEventListener('input', function () {\n      if (!element.checkValidity()) {\n        element.setAttribute('style', 'margin-top: 0');\n        div.textContent = wrongText;\n      } else {\n        element.removeAttribute('style');\n        div.textContent = '';\n      }\n    });\n  }); //message for validate form PHONE\n\n  phoneUser.forEach(function (element) {\n    var div = document.createElement('div'),\n        wrongText = 'Телефон в формате: +7(___)___-__-__';\n    div.id = 'input-validate';\n    element.insertAdjacentElement('beforebegin', div);\n    element.addEventListener('input', function () {\n      if (!element.checkValidity()) {\n        element.setAttribute('style', 'margin-top: 0');\n        div.textContent = wrongText;\n      } else {\n        element.removeAttribute('style');\n        div.textContent = '';\n      }\n    });\n  });\n  var div = document.createElement('div'),\n      wrongText = 'Только число от 1 до 499!';\n  div.id = 'input-validate';\n  distance.insertAdjacentElement('beforebegin', div);\n  distance.addEventListener('input', function () {\n    if (!distance.checkValidity()) {\n      distance.setAttribute('style', 'margin-top: 0');\n      div.textContent = wrongText;\n    } else {\n      distance.removeAttribute('style');\n      div.textContent = '';\n    }\n  });\n};\n\n/* harmony default export */ var modules_validateForm = (validateForm);\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\nmodules_sendForm();\nmodules_validateForm();\nmodules_listener();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);